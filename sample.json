{
  "code": "// Test file for JSGuard static code analyzer\n\n// Security issues\nfunction securityIssues() {\n  // XSS vulnerabilities\n  document.getElementById(\"output\").innerHTML = location.hash;\n  element.outerHTML = \"<div>\" + userInput + \"</div>\";\n  element.insertAdjacentHTML(\"beforeend\", data);\n\n  // Unsafe code execution\n  eval(\"console.log('This is unsafe')\");\n  new Function(\"a\", \"b\", \"return a + b\")();\n  setTimeout(\"alert('Hello')\", 100);\n\n  // DOM-based vulnerabilities\n  document.write(\"<script>\" + userInput + \"</script>\");\n}\n\n// Coding errors\nfunction codingErrors() {\n  // Implicit global variables\n  x = 10;\n\n  // Unsafe comparisons\n  if (userId == 123) {\n    authorized = true;\n  }\n\n  if (role != \"admin\") {\n    deny();\n  }\n\n  // Potential TypeError\n  const user = getUserData();\n  const name = user.name;\n}\n\n// Performance issues\nfunction performanceIssues() {\n  // Unused variables\n  var unused = \"This variable is never used\";\n\n  // Inefficient string concatenation in loop\n  var result = \"\";\n  for (var i = 0; i < 1000; i++) {\n    result += \"Item \" + i;\n  }\n\n  // Traditional for loop instead of array methods\n  for (var j = 0; j < array.length; j++) {\n    console.log(array[j]);\n  }\n}\n\n// Style issues\nfunction styleIssues() {\n  // Using var instead of let/const\n  var message = \"Hello world\";\n\n  for (var k = 0; k < 10; k++) {\n    var insideLoop = k;\n  }\n}\n\n// Extra large function to trigger complexity warning\nfunction veryLargeFunction() {\n  let x = 1;\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  console.log(x++);\n  return x;\n}\n\n// Insecure HTTP requests\nfunction makeRequest() {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", \"http://example.com/api/data\", true);\n  xhr.send();\n}\n\n// This function is never called\nfunction unusedFunction() {\n  console.log(\"This function is never used\");\n}\n"
}
